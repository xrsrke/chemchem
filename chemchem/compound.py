# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_compound.ipynb.

# %% auto 0
__all__ = ['Compound', 'CompoundBuilder']

# %% ../nbs/01_compound.ipynb 4
import pandas as pd
import chemlib

from .core import *

# %% ../nbs/01_compound.ipynb 16
class Compound(chemlib.Compound):
    def __init__(self,
        formula: str # the chemical formula
    ):
        super().__init__(formula)
        self.name = None
        self.mass = None
        self.moles = None
        self.specific_heat = None
    
    @property
    def heat_capacity(self):
        return self.mass * self.specific_heat
    
    def temperature(
        self,
        idx # the time step
    ): # time series for the changes in temperature
        pass
    
    def setName(self, name):
        self.name = name
        return self

    def setAmount(self, **kwargs): # set the amount by moles or mass of the compound
    
        if 'mass' in kwargs:
            kwargs['grams'] = kwargs['mass'].to('grams').magnitude
            kwargs.pop('mass')
        
        amounts = self.get_amounts(**kwargs)
        self.mass = Q(amounts['grams'], 'grams').to(Unit.MASS)
        self.moles = Q(amounts['moles'], Unit.MOLE)
        return self

    def setSpecificHeat(self, specific_heat):
        self.specific_heat = specific_heat
        return specific_heat

    def heat(self, change_in_temperature):
        return self.specific_heat * self.mass * change_in_temperature

# %% ../nbs/01_compound.ipynb 23
class CompoundBuilder():
    
    def __init__(self, formula):
        self.compound = Compound(formula)

    def setMass(self, **kwargs):
        pass
